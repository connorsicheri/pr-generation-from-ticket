name: AI PR from Jira

on:
  workflow_dispatch:
    inputs:
      issue_key:
        description: 'Jira issue key (e.g., ENG-1234)'
        required: true
      env_name:
        description: 'GitHub Environment to use (per-user), e.g., chris, manager'
        required: true
  repository_dispatch:
    types: [jira-ai-pr]

permissions:
  contents: write
  pull-requests: write

jobs:
  generate_pr:
    # Pick the environment provided via manual run or Jira payload
    environment: ${{ github.event.inputs.env_name || github.event.client_payload.env_name }}
    runs-on: ubuntu-latest
    env:
      # Resolve from the selected environment's secrets/vars
      JIRA_URL: ${{ secrets.JIRA_URL }}
      JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
      JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      DEFAULT_BASE_BRANCH: ${{ vars.DEFAULT_BASE_BRANCH || 'main' }}
      MAX_PROMPT_TOKENS: ${{ vars.MAX_PROMPT_TOKENS || '6000' }}
    steps:
      - name: Checkout runner repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jira PyGithub google-generativeai tiktoken

      - name: Resolve inputs
        id: resolve
        run: |
          ISSUE_KEY="${{ github.event.inputs.issue_key }}"; if [ -z "$ISSUE_KEY" ]; then ISSUE_KEY="${{ github.event.client_payload.issue_key }}"; fi
          if [ -z "$ISSUE_KEY" ]; then echo "issue_key missing" && exit 1; fi
          echo "issue_key=$ISSUE_KEY" >> $GITHUB_OUTPUT

      - name: Run AI PR generator
        run: |
          echo "Running for issue ${{ steps.resolve.outputs.issue_key }} in environment '${{ job.environment }}'"
          python app/main.py "${{ steps.resolve.outputs.issue_key }}"